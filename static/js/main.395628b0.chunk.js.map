{"version":3,"sources":["components/ExpenseForm.js","components/ExpenseItem.js","components/ExpenseList.js","components/Alert.js","components/InputBudget.js","App.js","serviceWorker.js","index.js"],"names":["ExpenseForm","edit","charge","amount","handleCharge","handleAmount","handleSubmit","onSubmit","className","type","placeholder","value","onChange","onClick","ExpenseItem","expense","id","date","handleEdit","handleDelete","format","ExpenseList","expenses","clearExpenses","map","key","length","Alert","text","InputBudget","income","submitBudget","handleIncome","initialExpenses","localStorage","getItem","JSON","parse","App","useState","setExpenses","setCharge","setAmount","setEdit","setId","show","alert","setAlert","setIncome","addBudget","setBudget","useEffect","setItem","stringify","handleAlert","setTimeout","totalExpenses","reduce","acc","curr","e","target","parseInt","preventDefault","tempExpenses","item","singleExpense","uuid","filter","find","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.395628b0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ExpenseForm = ({\r\n  edit,\r\n  charge,\r\n  amount,\r\n  handleCharge,\r\n  handleAmount,\r\n  handleSubmit,\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-center\">\r\n        <div className=\"form-group\">\r\n          <label>Expense</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Expense\"\r\n            value={charge}\r\n            onChange={handleCharge}\r\n          ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"USD\"\r\n            value={amount}\r\n            onChange={handleAmount}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <button className=\"btn\" type=\"submit\" onClick={handleSubmit}>\r\n        {edit ? \"Edit\" : \"Add expense\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MdEdit, MdDelete } from \"react-icons/md\";\r\nimport Moment from \"react-moment\";\r\n\r\nexport const ExpenseItem = ({\r\n  expense: { id, charge, amount, date },\r\n  handleEdit,\r\n  handleDelete,\r\n}) => {\r\n  return (\r\n    <li className=\"item\">\r\n      <div className=\"info\">\r\n        <span className=\"expense\">{charge}</span>\r\n        <span className=\"amount\">${amount}</span>\r\n      </div>\r\n      <span className=\"post-date\">\r\n        <Moment format=\"DD/MM/YYYY\">{date}</Moment>\r\n      </span>\r\n      <div>\r\n        <button className=\"clear-btn\" onClick={() => handleDelete(id)}>\r\n          <MdDelete />\r\n        </button>\r\n        <button className=\"edit-btn\" onClick={() => handleEdit(id)}>\r\n          <MdEdit />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ExpenseItem } from \"./ExpenseItem\";\r\n\r\nexport const ExpenseList = ({\r\n  expenses,\r\n  handleEdit,\r\n  handleDelete,\r\n  clearExpenses,\r\n}) => {\r\n  return (\r\n    <div >\r\n      <ul className=\"list\">\r\n        {expenses.map((expense) => (\r\n          <li>\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              expense={expense}\r\n              handleEdit={handleEdit}\r\n              handleDelete={handleDelete}\r\n            />\r\n          </li>\r\n        ))}\r\n        {expenses.length > 0 && (\r\n          <button className=\"btn-item\" onClick={() => clearExpenses()} >\r\n            Clear expenses\r\n          </button>\r\n        )}\r\n      </ul>\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Alert = ({ type, text }) => {\r\n  return <div className={`alert alert-${type}`}>{text}</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const InputBudget = ({ income, submitBudget, handleIncome }) => {\r\n\r\nreturn (\r\n    <form onSubmit={submitBudget}>\r\n      <div className=\"form-center\">\r\n        <div className=\"form-group\">\r\n          <label>Income</label>\r\n          <input\r\n            type=\"number\"\r\n            value={income}\r\n            onChange={handleIncome}\r\n            placeholder=\"USD\"\r\n            className=\"budget-input\"\r\n          ></input>\r\n        </div>\r\n        <button onClick={submitBudget} type=\"submit\" className=\"btn\">\r\n          Submit\r\n      </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport uuid from \"uuid/v4\";\nimport { ExpenseForm } from \"./components/ExpenseForm\";\nimport { ExpenseList } from \"./components/ExpenseList\";\nimport { Alert } from \"./components/Alert\";\nimport { InputBudget } from \"./components/InputBudget\";\n\n\nconst initialExpenses = localStorage.getItem(\"expenses\")\n  ? JSON.parse(localStorage.getItem(\"expenses\"))\n  : [];\n\nfunction App() {\n  //expenses\n  const [expenses, setExpenses] = useState(initialExpenses);\n  // add charge\n  const [charge, setCharge] = useState(\"\");\n  //add amount\n  const [amount, setAmount] = useState(\"\");\n  //edit\n  const [edit, setEdit] = useState(false);\n  //id\n  const [id, setId] = useState(0);\n  // alert\n  const [alert, setAlert] = useState({ show: false });\n  // add income\n  const [income, setIncome] = useState(\"\");\n  //budget\n  const [addBudget, setBudget] = useState(0);\n\n\n\n  useEffect(() => {\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  }, [expenses]);\n  \n\n\n\n  const handleCharge = (e) => {\n    setCharge(e.target.value);\n  };\n\n  const handleAmount = (e) => {\n    let amount = e.target.value;\n    if (amount === \"\") {\n      setAmount(amount);\n    } else {\n      setAmount(parseInt(amount));\n    }\n  };\n\n  const handleEdit = (id) => {\n    let expense = expenses.find((item) => item.id === id);\n    let { charge, amount } = expense;\n    setCharge(charge);\n    setAmount(amount);\n    setEdit(true);\n    setId(id);\n  };\n\n  const handleDelete = (id) => {\n    let tempExpenses = expenses.filter((item) => item.id !== id);\n    setExpenses(tempExpenses);\n  };\n\n  const clearExpenses = () => {\n    setExpenses([]);\n  };\n\n  const handleAlert = ({ type, text }) => {\n    setAlert({ show: true, text, type });\n    setTimeout(() => {\n      setAlert({ show: false });\n    }, 1000);\n  };\n\n  const handleIncome = (e) => {\n    let income = e.target.value;\n    income === \"\" ? setIncome(income) : setIncome(parseInt(income));\n  };\n\n  const submitBudget = (e) => {\n    e.preventDefault();\n\n    const addedBudget = () => {\n      return parseInt(income);\n    };\n    income !== \"\" && income > 0 ? setBudget(addedBudget) : \n     handleAlert({ type: 'danger', text: 'amount value has to be bigger than zero' });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (charge !== \"\" && amount > 0) {\n      if (edit) {\n        let tempExpenses = expenses.map((item) => {\n          return item.id === id ? { ...item, charge, amount } : item;\n        });\n        setExpenses(tempExpenses);\n        setEdit(false);\n      } else {\n        const singleExpense = { id: uuid(), charge, amount };\n        setExpenses([...expenses, singleExpense]);\n        handleAlert({ type: \"success\", text: \"item added\" });\n      }\n      setCharge(\"\");\n      setAmount(\"\");\n    } else {\n      handleAlert({ type: \"danger\", text: `charge can't be empty value and amount value has to be bigger than zero` });\n    }\n  };\n\n  let totalExpenses = expenses.reduce((acc, curr) => (acc += curr.amount), 0);\n\n  return (\n    <>\n      {alert.show && <Alert type={alert.type} text={alert.text} />}\n      <h1>Budget calculator</h1>\n      <div className=\"content\">\n        <div className=\"Income\">\n          <InputBudget handleIncome={handleIncome} submitBudget={submitBudget} />\n        </div></div>\n      <div className=\"content\">\n        <div className=\"balance\">\n          <h1 className=\"icon\">\n            Budget\n          <span className=\"total\">$ {addBudget}</span>{\" \"}\n          </h1>\n          <h1 className=\"icon\">\n            Expenses\n          <span className=\"spending\">$ {-totalExpenses}</span>\n          </h1>\n          <h1 className=\"icon\">\n            Balance\n          <span className=\"balance-icon\">$ {addBudget - totalExpenses}</span>\n          </h1>\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"Income\">\n          <ExpenseForm\n            edit={edit}\n            charge={charge}\n            handleCharge={handleCharge}\n            amount={amount}\n            handleAmount={handleAmount}\n            handleSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n      <div className=\"content\">\n        <ExpenseList\n          expenses={expenses}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n          clearExpenses={clearExpenses}\n        />\n      </div>\n    </>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}